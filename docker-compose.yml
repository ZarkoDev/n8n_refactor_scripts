version: "3.9"

services:
  laravel-app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: laravel-php-fpm:8.3
    container_name: laravel-app
    env_file:
      - .env
    volumes:
      - ./:/var/www/html
    ports:
      - "127.0.0.1:8000:8000"
    working_dir: /var/www/html
    # Run with host UID/GID to avoid permission issues on bind mounts
    user: "${UID:-1000}:${GID:-1000}"
    # Use startup script for database setup and server start
    command: /var/www/html/docker/php/startup.sh
    networks:
      - appnet
    depends_on:
      db:
        condition: service_healthy
      redis:
          condition: service_healthy


  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
        MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${DB_ROOT_PASSWORD:-root}"]
      interval: 5s
      timeout: 5s
      retries: 30


  vite:
      build:
          context: .
          dockerfile: docker/vite/Dockerfile
      container_name: laravel-vite
      ports:
          - "5173:5173"
      volumes:
          - ./:/var/www/html
          - /var/www/html/node_modules
      networks:
          - appnet


  redis:
      image: redis:7-alpine
      container_name: laravel-redis
      ports:
          - "6380:6379"
      volumes:
          - redis_data:/data
      networks:
          - appnet
      healthcheck:
          test: ["CMD", "redis-cli", "ping"]
          interval: 5s
          timeout: 3s
          retries: 5


  soketi:
      image: quay.io/soketi/soketi:1.2-16-alpine
      container_name: laravel-soketi
      ports:
          - "127.0.0.1:6001:6001"
      networks:
          - appnet


  n8n:
      image: n8nio/n8n:latest
      container_name: laravel-n8n
      ports:
          - "5678:5678"
      volumes:
          - n8n_data:/home/node/.n8n
      networks:
          - appnet


volumes:
  dbdata:
  redis_data:
  n8n_data:


networks:
  appnet:
    driver: bridge


